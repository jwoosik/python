'''
기본적인 출력문
'''

# sep: 구분자 옵션을 사용할 수 있다.
print('test1','test2','test3') # 기본적으로 공백이 들어감.
print('test1','test2','test3',sep='-') # 출력 내용을 'sep'으로 지정된 문자를 출력
print('test1','test2','test3',sep='===')
print('test1','test2','test3',sep=' , ')
print() # \n을 한번 출력해줌. 줄바꿈
# end: 출력내용 가장뒤에 붙을 출력 문자 '\n'
print('test1','test2','test3',sep=',', end='\t') # \t는 탭 적용.
print('test1','test2','test3',sep=',') # 기본적으론 \n이 들어감(개행)

# 형식을 갖는 문자열
# 포맷 연산자 % 를 이용한 문자열 만들기
# 문자열 객체의 format() 메소드 이용하기
# f-string 객체를 이용하여 문자열 만들기

print( '%d'%10 ) # %d에 원하는 데이터를 삽입하는 출력문
print( '%d %x'%(10,15) )
print( '제 나이는 %d살이고, 키는 %f입니다.'%(10,180), '몸무게는 %f입니다.'%70, sep=' === ' ) # 실수형은 소수점 6자리까지 표현해줌 
print( '원주율은 %f입니다.'%3.14 ) 
print( '제 이름은 %s입니다.'%'전우식' )
print( '원주율은 %s입니다.'%3.14 ) 


# %d: 데이터를 정수로 표현
# %o: 데이터를 8진수로 변환하여 표현
# %x: 데이터를 16진수로 변환하여 표현 ! 중요 ! (0~9, a,b,c,d,e,f)
# %f: 데이터를 실수형으로 표현
# %s: 데이터를 문자열 형식으로 표현 

print('==================================')
print('%5d'%1, '%5d'%2) # 5개의 칸으로 문자를 만듬 (출력예시: '_____1' 언더바 제외)
print('%-5d'%1, '%-5d'%2) # -마이너스는 왼쪽 정렬

print('%5.2f'%3.14) # 소수점 포함하여 5자리를 확보하고 그 이하를 2자리로 만들어줌
print('%-5.2f'%3.14)
print('%.5f'%3.143432515335) # 소수점 이하만 5자리로 제한

print('==================================')
print('제 나이는 {}살이고, 키는 {}입니다.'.format(10, 180)) # 복잡한 데이터를 표현할 때 사용하기도 함
print('제 나이는 {1}살이고, 키는 {0}입니다.'.format(10, 180)) # 0이 첫 번째 값, 순서 지정 가능

print('==================================')
# f-string
# 가독성이 뛰어나 주로 사용하는 표현식
# 반드시 f를 먼저 넣어주어야 사용 가능
age = 10
height = 180
print('제 나이는 10살이고 키는 180입니다.')
print( f'제 나이는 {age}살이고 키는 {height}입니다.' )
age = 20
height = 170
print( f'제 나이는 {age}살이고 키는 {height}입니다.' )


# 입력문
myData = input('프롬프트: 데이터를 입력해주세요 >>> ') # 항상 L Value는 변수가 와야함
print( f'입력하신 내용은 {myData} 입니다.' ) # input 함수에서 입력한 내용이 myData 변수로 들어감

float() # 실수형으로 변환
pi = str(3.14) # 문자열형으로 변환
num1 = int(input('첫 번째 숫자를 입력해주세요 >>> ')) # input 함수에 입력된 값은 무조건 문자열
num2 = int(input('두 번째 숫자를 입력해주세요 >>> ')) # int 함수로 숫자 형변환 !
num3 = num1 + num2
print( f'{num1} + {num2} = {num3}')  # 단순 문자열일뿐.. 계산은 위에서 함
print( f'{num1} + {num2} = {num1+num2}') # 간단한 수식은 {}내에 사용할 수 있음

# git
# github, gitlab, source...
# git과 github는 연동가능




